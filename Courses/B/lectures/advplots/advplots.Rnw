\input{../header_1_en.tex}

\SweaveOpts{prefix.string=plots/fig,eps=FALSE,echo=FALSE}

<<echo=FALSE, eval=TRUE>>=
options(width=40)
@ 

\begin{document}

\begin{frame}[allowframebreaks]
  \titlepage
\end{frame}

\section*{Class outline}

\begin{frame}[allowframebreaks]
  \frametitle{Advanced Plotting}
  \tableofcontents[hideallsubsections]
\end{frame}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{intro}

\begin{frame}[allowframebreaks]
  \frametitle{\pl{R} is strong in plots}
  \begin{itemize}
  \item As you might recall, \pl{R} is very strong for making \BIOCfunction{plots}, and it does so fast.
  \item We've seen how to make barplots, qqplots, mosaicplots, and many other ones.
  \item After all, plotting is very important for doing \alert{exploratory data analysis}.
  \item However, all of them just make a small part.
  \end{itemize}
\end{frame}

\begin{frame}[allowframebreaks, fragile]
  \frametitle{Install some packages}
  To gain some time, please install these packages:
<<eval=FALSE, echo=TRUE>>=
install.packages("lattice")
install.packages("mlmRev")
install.packages("plotrix")
install.packages("ggplot2")
install.packages("car")
install.packages("DAAG")
@  
\end{frame}

\begin{frame}[allowframebreaks]
  \frametitle{Task Views}
  \begin{itemize}
  \item First of all, remember the CRAN \alert{Task Views}.
  \item \url{http://cran.r-project.org/web/views/Graphics.html}
  \item From there, go to the \pl{plotrix} page.
  \item What two functions did they introduce on version 2.5-3?
  \end{itemize}
\end{frame}

\begin{frame}[allowframebreaks, fragile]
  \frametitle{tools}
  \begin{itemize}
  \item You might decide to check the reference manual and test out the examples, but that's quite time consuming.
  \item I found out on the \BIOCfunction{R Journal} about a new function on the \pl{tools} package.
<<eval=FALSE, echo=TRUE>>=
library(tools)
testInstalledPackage(pkgname)
@  
  \item Its very \alert{easy} to create pdf files with all the example plots of a given package!
  \end{itemize}
\end{frame}

\begin{frame}[allowframebreaks, fragile]
  \frametitle{Remember to check the help}
  \begin{itemize}
  \item Remember to use:
<<eval=FALSE, echo=TRUE>>=
help.start() # Unless you are using the Windows GUI
help(package = pkgname)
@  
  \item What is the replacement of the \BIOCfunction{hist} function on the lattice package?
  \end{itemize}
\end{frame}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{lattice}

\begin{frame}[allowframebreaks, fragile]
  \frametitle{Intro}
  \begin{itemize}
  \item It's an \emph{implementation} of Trellis graphics and created by \BIOCfunction{Deepayan Sarkar}.
  \item \url{http://dsarkar.fhcrc.org/}
  \item Basically, its great for plotting multivariate data!
<<eval=FALSE, echo=TRUE>>=
?Lattice
@  
  \item How are the lattice high level functions \alert{special}?
  \end{itemize}
\end{frame}

\begin{frame}[allowframebreaks, fragile]
  \frametitle{Data}
  \begin{itemize}
  \item We'll use a data set from the \pl{mlmRev} package and in general we'll follow the BioC2008 lattice lab.
<<eval=TRUE, echo=TRUE>>=
library(lattice)
data(Chem97, package = "mlmRev")
@  
  \item What is the class of \BIOCfunction{Chem97}?
  \item How many variables does it have? \emph{You might want to use length}
  \end{itemize}
\end{frame}

\begin{frame}[allowframebreaks]
  \frametitle{Formula syntax}
  \begin{itemize}
  \item We'll mostly use three variables: score, gcsescore and gender. 
  \item Now, \BIOCfunction{lattice} uses the \alert{formula} syntax.
  \item Basically its $y ~ x | g1$ where $x$ is the variable with the numeric values and $g1$ is a factor.
  \end{itemize}
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{Comparing histograms}
<<echo=TRUE,fig=TRUE,height=4>>=
hist(Chem97$gcsescore)
@
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{Comparing histograms: part II}
<<echo=TRUE,fig=TRUE,height=4>>=
print(histogram(~gcsescore, data=Chem97))
@ 
\end{frame}

\begin{frame}[allowframebreaks, fragile]
  \frametitle{A grouping var}
  \begin{itemize}
  \item The variable \pl{score} \alert{only} has values 0, 2, 4, 6, 8 and 10.
<<eval=TRUE, echo=TRUE>>=
head(Chem97$score)
class(Chem97$score)
@  
  \item We can use this variable as a factor!
  \item Lets make a more interesting plot :)
  \end{itemize}
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{Multiple hist}
<<echo=TRUE,fig=TRUE,height=3.5>>=
print(histogram(~ gcsescore | factor(score), data = Chem97))
@ 
\end{frame}

\begin{frame}[allowframebreaks, fragile]
  \frametitle{And gender?}
  \begin{itemize}
  \item But we want to use our third variable: gender
<<eval=TRUE, echo=TRUE>>=
class(Chem97$gender)
@  
  \item Its \alert{difficult} to plot two histograms on the same panel, but that's not the case with density lines!
  \end{itemize}
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{Densities}
<<echo=TRUE,fig=TRUE,height=5>>=
print(densityplot(~ gcsescore | factor(score), Chem97, groups = gender,
plot.points = FALSE, auto.key = TRUE))
@ 
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{QQ norm too!}
<<echo=TRUE,fig=TRUE,height=5>>=
print(qqmath(~ gcsescore | factor(score), Chem97, groups = gender,auto.key = TRUE, aspect = "xy", f.value = ppoints(1000)))
@ 
\end{frame}

\begin{frame}[allowframebreaks, fragile]
  \frametitle{Compare QQ norm}
  \begin{itemize}
  \item Re-do the above QQ norm plot with the following arguments:
<<eval=FALSE, echo=TRUE>>=
f.value = ppoints(100)
type = c("p", "g")
@
  \item Which of the two QQ norm plots is clearer?
  \end{itemize}
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{QQ plots}
<<echo=TRUE,fig=TRUE,height=5>>=
print(qq(gender ~ gcsescore | factor(score), Chem97,
f.value = ppoints(100), type = c("p", "g"), aspect = 1))
@ 
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{Boxplots}
<<echo=TRUE,fig=TRUE,height=5>>=
print(bwplot(factor(score) ~ gcsescore | gender, Chem97))
@ 
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{Boxplots II}
<<echo=TRUE,fig=TRUE,height=5>>=
print(bwplot(gcsescore ~ gender | factor(score), Chem97, layout = c(6, 1)))
@ 
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{Stripplot}
  \begin{itemize}
  \item Useful for small data sets :)
  \end{itemize}
<<echo=TRUE,fig=TRUE,height=5>>=
library(DAAG)
print(stripplot( ht ~ factor(sport), data = ais))
@ 
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{Stripplot II}
  \begin{itemize}
  \item The \BIOCfunction{jitter} argument saves the day!
  \item Plus points in lattice are partially transparent
  \end{itemize}
<<echo=TRUE,fig=TRUE,height=5>>=
print(stripplot( ht ~ factor(sport), data = ais, jitter=T))
@ 
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{xyplot}
  \begin{itemize}
  \item With lattice, we can also make something similar to \BIOCfunction{plot}
  \item But first, lets create a subset of the type of sports.
  \end{itemize}
<<echo=TRUE,fig=TRUE,height=5>>=
subset <- ais$sport %in% c("Netball", "Tennis")
print(xyplot(ht ~ wt | sport, groups=sex, pch=c(4,1), aspect=1, subset=subset, data=ais))
@
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{xyplot II}
  \begin{itemize}
  \item What will happen if we say \pl{auto.key=TRUE}?
  \item On this plot, we are visualizing data from how many variables?
  \end{itemize}
<<echo=TRUE,fig=TRUE,height=5>>=
print(xyplot(ht ~ wt | sport, groups=sex, pch=c(4,1), aspect=1, auto.key=list(columns=2), subset=subset, data=ais))
@ 
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{xyplot B}
<<echo=TRUE,fig=TRUE,height=5>>=
data(Earthquake, package = "nlme")
print(xyplot(accel ~ distance, data = Earthquake))
@ 
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{xyplot B II}
  \begin{itemize}
  \item What does the \pl{scales} argument control?
  \item What would happen if you delete \pl{smooth} from the type argument?
  \end{itemize}
<<echo=TRUE,fig=TRUE,height=5>>=
print(xyplot(accel ~ distance, data = Earthquake, scales = list(log = TRUE),
type = c("p", "g", "smooth"), xlab = "Distance From Epicenter (km)",
ylab = "Maximum Horizontal Acceleration (g)"))
@ 
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{3D!}
  \begin{itemize}
  \item With the \BIOCfunction{cloud} function its possible to create 3D plots. 
  \item To rotate it, you need to re-make it with different values for the $x$, $y$ and $z$.
  \end{itemize}
<<echo=TRUE,fig=TRUE,height=3.5>>=
print(cloud(depth ~ lat * long, data = quakes,
zlim = rev(range(quakes$depth)),
screen = list(z = 115, x = -60), panel.aspect = 0.75,
xlab = "Longitude", ylab = "Latitude", zlab = "Depth"))
@ 
\end{frame}

\begin{frame}[allowframebreaks]
  \frametitle{That's it for lattice}
  \begin{itemize}
  \item \BIOCfunction{Lattice} has more plot functions such as \BIOCfunction{barchart} and \BIOCfunction{dotplot} which we won't cover today, but feel free to check them.
  \item There is also a book available on \pl{lattice}: \url{http://lmdvr.r-forge.r-project.org/}
  \item As I said at the beginning, use the \alert{\pl{tools}} package to explore \pl{lattice} and \pl{latticeExtra}.
  \end{itemize}
\end{frame}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{plotrix}

\begin{frame}[allowframebreaks]
  \frametitle{Intro}
  \begin{itemize}
  \item It contains loads of enhanced \pl{R} functions.
  \item The reference manual has \alert{139} pages!!!
  \item Functions such as adding a table, standard deviation bars, cutting axes, etc.
  \end{itemize}
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{Barplot with table}
  \begin{itemize}
  \item First, we'll create a data.frame with some data
  \item Then we'll use the \BIOCfunction{barp} function to create a barplot
  \item Finally, we'll add the table to our plot
  \end{itemize}
<<echo=TRUE,fig=TRUE,height=5.2>>=
set.seed(123)
df<-data.frame(Time0=runif(3), Time1 = rnorm(3), Time2 = rlnorm(3))
df<- round(df, digits=2)
rownames(df)<-c("Gene1","Gene2","Gene3")
df
library(plotrix)
barp(df,ylab="Expression Lvl vs Control",
names.arg=colnames(df),col=1:3)
addtable2plot(.45, -1,df,bty="o",display.rownames=TRUE,hlines=TRUE,
title="Data in table format")
@ 
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{Plot with gaps}
  \begin{itemize}
  \item With Plotrix we can make plots that have a gap on one axis.
  \item For example, a normal \pl{plot} with a gap on the $Y$ axis.
  \end{itemize}
<<echo=TRUE,fig=TRUE,height=5>>=
data<-c(rnorm(8)+3,rnorm(8)+21,rnorm(8)+4.5,rnorm(8)+20)
color <- c(rep(2,8), rep(3, 8), rep(4, 8), rep(1,8))
gap.plot(data,gap=c(8,16),xlab="Index",ylab="Values",
main="Gap on Y axis",col=color)
@ 
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{Gap on a barplot}
  \begin{itemize}
  \item Or a barplot with a gap.
  \item Very helpful to visualize all your data.
  \item However, there is an issue with the labels on the $Y$ axis T\_T so be careful when using this kind of plot.
  \end{itemize}
<<echo=TRUE,fig=TRUE,height=5>>=
data<-c(rnorm(10),rnorm(10)+30)
gap.barplot(data,gap=c(6,25),xlab="Index",ytics=c(1:30),
ylab="Group values", las=2)
@ 
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{Error bars}
  \begin{itemize}
  \item Nowadays you get to see lots of graphs with the error bars.
  \item Experimental papers generally have 3 to 5 repeats of the same experiment.
  \item The \BIOCfunction{dispersion} function will be helpful to make this kind of plot.
  \end{itemize}
<<echo=TRUE,fig=TRUE,height=5>>=
data <- matrix(rnorm(100), 10, 10)
a <- colMeans(data)
b <- std.error(data)
plot(a, ylim=c(min(a-b), max(a+b)), xlab="Sample", ylab="Value", col=4, type="o")
dispersion(1:10, colMeans(data), b)
@ 
\end{frame}

\begin{frame}[allowframebreaks, fragile]
  \frametitle{Some real data}
  \begin{itemize}
  \item For the next plots, we'll use data from \myurlshort{www.ncbi.nlm.nih.gov/pubmed/19587683}{this article} where they sequenced a Korean individual.
  \item I already saved as \pl{csv} files two tables for easy import. We'll load them into \pl{R} with the \BIOCfunction{read.csv} function. \scriptsize
<<eval=TRUE, echo=TRUE>>=
t1 <- read.csv("http://www.lcg.unam.mx/~lcollado/B/data/SuppTable01_kogenome6_double_end-clone_1132_742.csv", header=T)
t2 <- read.csv("http://www.lcg.unam.mx/~lcollado/B/data/SuppTable06_nsSnp_AK1.csv", header=T)
@  
  \item \normalsize Use \alert{head}, \alert{dim}, \alert{class} to find out more about the data.
  \end{itemize}
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{plotCI}
  \begin{itemize}
  \item \pl{Plotrix} has another function that plots error bars.
  \item We'll use our first table and get the data we need using \pl{tapply}.
  \end{itemize}
<<echo=TRUE,fig=TRUE,height=5>>=
means <- tapply(t1$bac_size, t1$chrNo, mean)
err <- tapply(t1$bac_size, t1$chrNo, std.error)
plotCI(1:24, means, err, col="red", scol="blue", las=2, main="bac_size per chrNo")
@ 
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{One similar to image}
  \begin{itemize}
  \item With \BIOCfunction{color2D.matplot} we can make plots very similar to \pl{image}
  \item What differences do you notice vs \pl{image}?
  \end{itemize}
<<echo=TRUE,fig=TRUE,height=5>>=
mat<- matrix(rnorm(100, 0, 2), 10, 10)
color2D.matplot(mat, show.legend=T)
@ 
\end{frame}


\begin{frame}[fragile, allowframebreaks]
  \frametitle{Hierobarp}
  \begin{itemize}
  \item We'll use the default example for this powerful plot.
  \end{itemize}
<<echo=TRUE,fig=TRUE,height=3.5>>=
test.df<-data.frame(Age=rnorm(100,25,10),
Sex=sample(c("M","F"),100,TRUE),
Marital=sample(c("D","M","S","W"),100,TRUE),
Employ=sample(c("Full Time","Part Time","Unemployed"),100,TRUE))
test.col<-list(Overall="green",Employ=c("purple","orange","brown"),
Marital=c("#1affd8","#caeecc","#f7b3cc","#94ebff"),Sex=c(2,4))
hierobarp(formula=Age~Sex+Marital+Employ,data=test.df,ylab="Mean age (years)",
main="Show only the final breakdown",errbars=TRUE,col=test.col$Sex)
@ 
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{Two scales}
  \begin{itemize}
  \item Sometimes you want two lines with different scales on the same plot.
  \item \BIOCfunction{twoord.plot} is the solution :)
  \end{itemize}
<<echo=TRUE,fig=TRUE,height=5>>=
twoord.plot(2:10,seq(3,7,by=0.5)+rnorm(9),
1:15,rev(60:74)+rnorm(15),xlab="Sequence",
ylab="Ascending values",rylab="Descending values",
main="Plot with two ordinates - points and lines")
@ 
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{Zoom}
  \begin{itemize}
  \item The final plot I'll show you from \pl{plotrix} enables us to zoom into a section of the plot.
  \end{itemize}
<<echo=TRUE,fig=TRUE,height=5>>=
zoomInPlot(rnorm(100),rnorm(100),rxlim=c(-1,1),rylim=c(-1,1),
zoomtitle="Zoom In Plot")
@ 
\end{frame}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{ggplot2}

\begin{frame}[allowframebreaks]
  \frametitle{Intro}
  \begin{itemize}
  \item \alert{ggplot2} is a much more sophisticated plotting package.
  \item \alert{199} pages long ref manual!!!
  \item Lets take a look at some examples.
  \end{itemize}
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{Plotmatrix}
  \begin{itemize}
  \item We'll use the \BIOCfunction{iris} data set which is used quite frequently to exemplify scatterplots.
  \item Meaning that you are using 3 or more variables.
  \item Explore \pl{iris} with head and other similar functions.
  \end{itemize}
<<echo=TRUE,eval=FALSE>>=
plotmatrix(iris[,1:4])
@ 
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{Plotmatrix II}
  \begin{itemize}
  \item If we combine \BIOCfunction{plotmatrix} with \BIOCfunction{geom\_smooth} we can get a much better graph.
  \end{itemize}
<<echo=TRUE,eval=FALSE>>=
plotmatrix(iris[,1:4]) + geom_smooth(method="lm")
@ 
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{We'll be back}
  \begin{itemize}
  \item On the class where we'll learn about linear regressions, we'll be back and make plots like this one:
  \end{itemize}
<<echo=TRUE,eval=FALSE>>=
mod <- lm(mpg ~ wt, data = mtcars)
qplot(.fitted, .resid, data = mod) + geom_hline() + geom_smooth(se = FALSE)
@ 
\end{frame}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{car}

\begin{frame}[allowframebreaks]
  \frametitle{Intro}
  \begin{itemize}
  \item While this package has quite a lot of functions too (105 page ref man), one special plot caught my eye.
  \item Feel free to check all the examples later if you want :D
  \end{itemize}
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{scatterplot.matrix}
  \begin{itemize}
  \item Quite similar plot to some we made before with automatic colors
  \end{itemize}
<<echo=TRUE,fig=TRUE,height=5>>=
library(car)
scatterplot.matrix(~income + education + prestige | type, data=Duncan)
@ 
\end{frame}

\begin{frame}[fragile, allowframebreaks]
  \frametitle{scatterplot}
  \begin{itemize}
  \item With \BIOCfunction{scatterplot} we can create boxplots on our axis!!
  \end{itemize}
<<echo=TRUE,fig=TRUE,height=5>>=
scatterplot(prestige ~ income|type, data=Prestige, span=1)
@ 
\end{frame}

\begin{frame}[allowframebreaks, fragile]
  \frametitle{Session Info}
  \scriptsize
<<eval=TRUE, echo=TRUE>>=
sessionInfo()
@  
\end{frame}

\end{document}
